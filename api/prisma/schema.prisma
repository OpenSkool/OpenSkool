generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Language {
  NL
  EN
}

enum Role {
  ADMIN
  EXTERNAL
  STUDENT
  TEACHER
}

model Competency {
  id String @id @default(cuid())

  createdAt   DateTime @default(now())
  createdBy   Person?  @relation("CompetencyToPersonCreated", fields: [createdById], references: [id])
  createdById String?

  updatedAt   DateTime @updatedAt
  updatedBy   Person?  @relation("CompetencyToPersonUpdated", fields: [updatedById], references: [id])
  updatedById String?

  subCompetencies    Competency[] @relation("CompetencyToCompetency")
  parentCompetency   Competency?  @relation("CompetencyToCompetency", fields: [parentCompetencyId], onDelete: Cascade, references: [id])
  parentCompetencyId String?

  translations CompetencyTranslation[]
}

model CompetencyTranslation {
  id           String     @id @default(cuid())
  competency   Competency @relation(fields: [competencyId], onDelete: Cascade, references: [id])
  competencyId String
  languageCode Language
  title        String

  @@unique([competencyId, languageCode])
}

model Education {
  id String @id @default(cuid())

  createdAt   DateTime @default(now())
  createdBy   Person?  @relation("EducationToPersonCreated", fields: [createdById], references: [id])
  createdById String?

  updatedAt   DateTime @updatedAt
  updatedBy   Person?  @relation("EducationToPersonUpdated", fields: [updatedById], references: [id])
  updatedById String?

  translations EducationTranslation[]
}

model EducationTranslation {
  id           String    @id @default(cuid())
  education    Education @relation(fields: [educationId], onDelete: Cascade, references: [id])
  educationId  String
  languageCode Language
  title        String

  @@unique([educationId, languageCode])
}

model Person {
  id String @id @default(cuid())

  competenciesCreated Competency[] @relation("CompetencyToPersonCreated")
  competenciesUpdated Competency[] @relation("CompetencyToPersonUpdated")

  educationsCreated Education[] @relation("EducationToPersonCreated")
  educationsUpdated Education[] @relation("EducationToPersonUpdated")

  firstName String
  lastName  String
  role      Role
}
