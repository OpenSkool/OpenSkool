name: Publish & Deploy

on:
  push:
    branches:
      - infrastructure
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Setup doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            registry.digitalocean.com/openskool/os-api
          tags: |
            type=raw,value=latest,enable=${{github.ref == format('refs/heads/{0}', 'infrastructure') || github.ref == format('refs/heads/{0}', 'main')}}
            type=ref,event=pr
            type=sha
            type=semver,pattern={{version}}

      - name: Log in to DigitalOcean
        run: doctl registry login --expiry-seconds 1200

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          file: api/Dockerfile
          push: true
          tags: ${{steps.meta.outputs.tags}}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - if: github.event_name != 'pull_request'
        name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 os-dev

      - if: github.event_name != 'pull_request'
        name: Deploy to DigitalOcean Kubernetes
        run: cat $GITHUB_WORKSPACE/infrastructure/api.yaml | sed "s/:latest/:${{ steps.meta.outputs.version }}/g" | kubectl apply -f -

      - if: github.event_name != 'pull_request'
        name: Verify deployment
        run: kubectl rollout status deployment/os-dev-api
